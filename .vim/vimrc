"               
"                 
"
"                  ██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
"                  ██║   ██║██║████╗ ████║██╔══██╗██╔════╝
"                  ██║   ██║██║██╔████╔██║██████╔╝██║     
"                  ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║     
"                   ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"                    ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
"                                                         
"
"
" =======================================================================
"


call plug#begin('~/.vim/plugged')

" ========== Plug ========== "

Plug 'flazz/vim-colorschemes'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vifm/vifm.vim'
Plug 'preservim/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug 'junegunn/fzf.vim'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'ap/vim-css-color'

" ========== let ========== "

let g:airline_powerline_fonts = 1
let g:airline_theme='onedark'
let g:airline#extensions#tabline#enabled = 1 " enable airline tabline on the top
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#fnamemod = ':t'
let g:fzf_colors =
            \ { 'fg':      ['fg', 'Normal'],
            \ 'bg':      ['bg', 'Normal'],
            \ 'hl':      ['fg', 'Comment'],
            \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
            \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
            \ 'hl+':     ['fg', 'Statement'],
            \ 'info':    ['fg', 'PreProc'],
            \ 'border':  ['fg', '#E06C75'],
            \ 'prompt':  ['fg', 'Conditional'],
            \ 'pointer': ['fg', 'Exception'],
            \ 'marker':  ['fg', 'Keyword'],
            \ 'spinner': ['fg', 'Label'],
	    \ 'header':  ['fg', 'Comment'] }

" ========== WebDevIcons Configuration ========== "

let g:webdevicons_enable = 1 " enable WebDevIcons to Airline
let g:webdevicons_enable_nerdtree = 1
let g:webdevicons_enable_vimfiler = 1
let g:webdevicons_enable_unite = 1
let g:webdevicons_enable_startify = 1
let g:webdevicons_enable_airline_tabline = 1
let g:webdevicons_enable_airline_statusline = 1
let g:webdevicons_enable_flagship_statusline = 1
let g:WebDevIconsUnicodeGlyphDoubleWidth = 1
let g:WebDevIconsUnicodeDecorateFileNodes = 1
let g:WebDevIconsNerdTreeAfterGlyphPadding = '  '

let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = ' '
let g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol = ' '
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:DevIconsEnableFolderPatternMatching = 1
let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = '  '
let g:DevIconsDefaultFolderOpenSymbol = '  '

" ========== NerdTree Configuration ========== "

let g:WebDevIconsDisableDefaultFolderSymbolColorFromNERDTreeDir = 1
let g:WebDevIconsDisableDefaultFileSymbolColorFromNERDTreeFile = 1

let g:NERDTreeDirArrowExpandable = ' '
let g:NERDTreeDirArrowCollapsible = ' '
let g:NERDTreeDirArrows = 1

let g:NERDTreeDisableFileExtensionHighlight = 1
let g:NERDTreeDisableExactMatchHighlight = 1
let g:NERDTreeDisablePatternMatchHighlight = 1

let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName = 1
let g:NERDTreePatternMatchHighlightFullName = 1

let g:NERDTreeHighlightFolders = 1 
let g:NERDTreeHighlightFoldersFullName = 1

" NerdTree mapping "

nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

" Most Used NerdTree Keybinding "
" o : open files, directory and bookmarks
" t : open selected node/bookmarks in a new tab
" x : close the current nodes parent
" e : edit current directory
" D : delete current bookmarks
" I : toggle wheter hideen files displayed
" f : toggle wheter the file filters are used
" i : open the selected file in a horizontal split window
" s : open the selected file in a vertical split window
" R : refresh NerdTree
" ? : toggle NerdTree help

" NerdTree Colors "
 
let s:brown = "905532"
let s:aqua =  "3AFFDB"
let s:blue = "689FB6"
let s:darkBlue = "44788E"
let s:purple = "834F79"
let s:lightPurple = "834F79"
let s:red = "AE403F"
let s:beige = "F5C06F"
let s:yellow = "F09F17"
let s:orange = "D4843E"
let s:darkOrange = "F16529"
let s:pink = "CB6F6F"
let s:salmon = "EE6E73"
let s:green = "8FAA54"
let s:lightGreen = "31B53E"
let s:white = "FFFFFF"
let s:rspec_red = 'FE405F'
let s:git_orange = 'F54D27'

let g:NERDTreeExtensionHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExtensionHighlightColor['css'] = s:blue " sets the color of css files to blue

let g:NERDTreeExactMatchHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExactMatchHighlightColor['.gitignore'] = s:git_orange " sets the color for .gitignore files

let g:NERDTreePatternMatchHighlightColor = {} " this line is needed to avoid error
let g:NERDTreePatternMatchHighlightColor['.*_spec\.rb$'] = s:rspec_red " sets the color for files ending with _spec.rb

let g:WebDevIconsDefaultFolderSymbolColor = s:beige " sets the color for folders that did not match any rule
let g:WebDevIconsDefaultFileSymbolColor = s:blue " sets the color for files that did not match any rule


" ========== fuzzy finder (fzf) configuration ========== "

let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.9 } }
let $FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --layout reverse --margin=1,4"
let $FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --layout reverse --margin=1,4 --preview 'bat --color=always --style=header,grid --line-range :300 {}'"

" ========== airline config ========== "
 
" <<< Uncomment if u want a custom Airline section >>> "

"function! AccentDemo()
"  let keys = ['Regalkun']
"  for k in keys
"    call airline#parts#define_text(k, k)
"  endfor
"  call airline#parts#define_accent('Regalkun', 'bold')
"  let g:airline_section_a = airline#section#create(keys)
"endfunction
"autocmd VimEnter * call AccentDemo()

function! AirLineInit()
	let g:airline_section_a = airline#section#create(['mode','   ','branch'])
	let g:airline_section_b = airline#section#create_left(['ffenc','%f'])
	let g:airline_section_c = airline#section#create(['filetype'])
	let g:airline_section_x = airline#section#create(['%P'])
	let g:airline_section_y = airline#section#create(['%B'])
	let g:airline_section_z = airline#section#create_right(['%l','%c'])
endfunction
autocmd VimEnter * call AirLineInit()


    " ---------- unicode symbols ---------- "

    if !exists('g:airline_symbols')
    let g:airline_symbols = {} " set airline custom  symbol
 endif

  let g:airline_left_sep = '»'
  let g:airline_left_sep = '▶'
  let g:airline_right_sep = '«'
  let g:airline_right_sep = '◀'
  let g:airline_symbols.colnr = ' ㏇:'
  let g:airline_symbols.colnr = ' ℅:'
  let g:airline_symbols.crypt = ''
  let g:airline_symbols.linenr = ' '
  let g:airline_symbols.linenr = '   '
  let g:airline_symbols.linenr = '  :'
  let g:airline_symbols.linenr = '¶'
  let g:airline_symbols.maxlinenr = ''
  let g:airline_symbols.maxlinenr = ''
  let g:airline_symbols.branch = ' '
  let g:airline_symbols.paste = 'ρ '
  let g:airline_symbols.paste = 'Þ '
  let g:airline_symbols.paste = ' '
  let g:airline_symbols.spell = ' '
  let g:airline_symbols.notexists = 'Ɇ '
  let g:airline_symbols.whitespace = ' '

  " ---------- powerline symbols ---------- "

  let g:airline_left_sep = ' '
  let g:airline_left_alt_sep = ''
  let g:airline_right_sep = ' '
  let g:airline_right_alt_sep = ''
  let g:airline_symbols.branch = ''
  let g:airline_symbols.colnr = '   :'
  let g:airline_symbols.readonly = ''
  let g:airline_symbols.linenr = '   :'
  let g:airline_symbols.maxlinenr = ' '
  let g:airline_symbols.dirty='⚡'


" ========== set ========== "

set termguicolors
set encoding=UTF-8
set number
set guifont=JetBrains\ Nerd\ Font\ Mono\ 12
set laststatus=2
set t_Co=256
set mouse=a

" ========== Vim Command ========== "

" show terminal inside vim "
 
" :vertical terminal / :vert term
" :help :term
" :set splitright 
" :set splitbelow
" :rightb :vert ter 
" :vert term ++rows=(height) cols=(width)

" ========== other ========== "

syntax on
colorscheme onedark

call plug#end()
